/* 
EFEITO CARROSSEL COM HTML & CSS - SEM JAVASCRIPT https://www.youtube.com/watch?v=XXUEFueOsAs
Como fazer um SLIDESHOW com HTML e CSS | Higor Feijó https://www.youtube.com/watch?v=zxqGOgsgUtk&t=1328s
Slideshow apenas com CSS https://www.treinaweb.com.br/blog/slideshow-apenas-com-css
*/

.galery {
    width: 640px;
    height: 360px;
    border-radius: 20px;
    background-color: black;
    overflow: hidden;
    position: absolute;
}

.navigation {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translate(-50%);
    display: flex;
}

.bar {
    width: 70px;
    height: 17px;
    border: 2px solid #fff;
    margin: 6px;
    border-radius: 5px;
    cursor: pointer;
    transition: 0.4s;
}

.bar:hover {
    background-color: #fff;
}


input {
    display: none;
}


.slide-show {
    overflow: hidden;
  }


.slides-list {

    /*
    Remove os estilos da lista
    */

    list-style-type: none;
    
    /* 
      Deixa todos os itens da lista na horizontal e todos com a mesma largura.
    */

    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 1fr;

    /*
    Exibindo um slide de cada vez. Agora temos um slide do lado do outro. Mas temos que fazer com que apareça apenas um de cada vez. Bom, isso é muito simples: basta que cada slide (li) preencha 100% da largura disponível.  Se temos quatro slides (li), e cada um precisa ocupar 100% do espaço disponível, nosso ul precisa ter um tamanho de 400%. Usamos uma variável do CSS para armazenar o total de itens em nosso Slideshow, e passamos essa variável para a função calc(). Assim podemos mudar facilmente o total de itens dos nossos slides.
    */

    --total-items: 4;
    width: calc(var(--total-items) * 100%);

    /*
    Sabemos que cada li possui um tamanho de 100%, certo? Então para exibir o primeiro slide, o left tem que ter valor 0. Para exibir o segundo slide, temos que mover 100% para a esquerda, ou seja, left precisará ter o valor -100%. Para exibir o terceiro slide, temos que mover 200% para a esquerda, ou seja, left precisará ter o valor -200%.Vamos aproveitar novamente as variáveis do CSS e a função calc() para tratar isso.*/

    --selected-item: 0;
    position: relative;
    left: calc(var(--selected-item) * -100%);
    
    /*
    Podemos indicar uma transição para ter um efeito mais animado quando mudarmos de slide. Para isso usaremos a propriedade transition.
    */

    /* transition: left 0.4s cubic-bezier(0.680, -0.550, 0.265, 1.550); 

    animation-name: animacao;
    animation-duration: 20s;
    animation-iteration-count: infinite; */
  }

  .slides-list:hover {
    animation-play-state: paused;
  }

  .slide img{
    width: 100%;
  }

    /*
    Para mudar o slide que será exibido basta alterar o valor da variável --selected-item. podemos nos aproveitar do pseudo-seletor :checked do CSS para indicar que o valor da variável --selected-item irá mudar de acordo com o Radio Button marcado.
    */

    #slide-controller1:checked ~ .slide-show .slides-list{--selected-item: 0;}
    #slide-controller2:checked ~ .slide-show .slides-list{--selected-item: 1;}
    #slide-controller3:checked ~ .slide-show .slides-list{--selected-item: 2;}
    #slide-controller4:checked ~ .slide-show .slides-list{--selected-item: 3;}  



/*
.slides {
    display: flex;
    width: 400%;
    height: 100%;
    animation-name: animacao;
    animation-duration: 20s;
    animation-iteration-count: infinite;
}
*/

/*
.galery .fotos {
    width: 500%;
    animation-name: animacao;
    animation-duration: 20s;
    animation-iteration-count: infinite;
}

.galery .fotos img {
    width: 19.9%;
}
*/
/*
.slide {
    width: 25%;
    transition: 0.6s;
}

.slide img{
    width: 100%;
    height: 100%;
}

.slides:hover {
    animation-play-state: paused;
}

#slide1:checked ~ .s1 {
    margin-left: 0;
}

#slide2:checked ~ .s1 {
    margin-left: -25%;
}

#slide3:checked ~ .s1 {
    margin-left: -50%;
}

#slide4:checked ~ .s1 {
    margin-left: -75%;
}
*/


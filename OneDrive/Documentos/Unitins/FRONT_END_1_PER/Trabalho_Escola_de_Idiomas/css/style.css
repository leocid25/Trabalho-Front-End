/* 
EFEITO CARROSSEL COM HTML & CSS - SEM JAVASCRIPT https://www.youtube.com/watch?v=XXUEFueOsAs
Como fazer um SLIDESHOW com HTML e CSS | Higor Feijó https://www.youtube.com/watch?v=zxqGOgsgUtk&t=1328s
Slideshow apenas com CSS https://www.treinaweb.com.br/blog/slideshow-apenas-com-css
Criando um menu horizontal com HTML e CSS https://satellasoft.com/artigo/css/criando-um-menu-horizontal-com-html-e-css
Criando Menu Horizontal com Sub-Menu https://www.youtube.com/watch?v=7u8vR-pQrYQ
*/
/* Cabeçalho */
.menu {
  z-index: 9999;
  top: 0px;
  position:fixed;
  /*margin-left: 15%;
  margin-right: 10%; */
  width: 100%;
  background-color: black;
  height: 60px;
}

.center ul li{
  float:left;
  background-color: black;
	width: 200px;
	text-align: center;
	line-height: 60px;
	font-size: 24px;
  font-size: x-large;
}

.center ul li:hover{
	background-color: #2c69cc;
}

#ultimo {
  background-color: green;
}

#ultimo:hover {
  background-color: #2c69cc;
}

.center ul{
	padding: 0px;
}

.center ul ul{
	display: none;
}

.center ul li:hover > ul{
	display:block;
}

.center ul ul li:hover{
	background-color: #144aa0;
}

.center a{
	color: white;
	text-decoration: none;
}

/* Propriedades do main */

.flex-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around;
}

/* Estilo do Carrossel */

.carrossel {
    width: 640px;
    height: 360px;
    margin-top: 100px;
}

.galeria {
    overflow: hidden;
  }


.lista_de_slides {

    /*
    Remove os estilos da lista
    */

    list-style-type: none;
    
    /* 
      Deixa todos os itens da lista na horizontal e todos com a mesma largura.
    */

    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 1fr;

    /*
    Exibindo um slide de cada vez. Agora temos um slide do lado do outro. Mas temos que fazer com que apareça apenas um de cada vez. Bom, isso é muito simples: basta que cada slide (li) preencha 100% da largura disponível.  Se temos quatro slides (li), e cada um precisa ocupar 100% do espaço disponível, nosso ul precisa ter um tamanho de 400%. Usamos uma variável do CSS para armazenar o total de itens em nosso Slideshow, e passamos essa variável para a função calc(). Assim podemos mudar facilmente o total de itens dos nossos slides.
    */

    --total-items: 4;
    width: calc(var(--total-items) * 100%);

    /*
    Sabemos que cada li possui um tamanho de 100%, certo? Então para exibir o primeiro slide, o left tem que ter valor 0. Para exibir o segundo slide, temos que mover 100% para a esquerda, ou seja, left precisará ter o valor -100%. Para exibir o terceiro slide, temos que mover 200% para a esquerda, ou seja, left precisará ter o valor -200%.Vamos aproveitar novamente as variáveis do CSS e a função calc() para tratar isso.*/

    --selected-item: 0;
    position: relative;
    left: calc(var(--selected-item) * -100%);
    
    /*
    Podemos indicar uma transição para ter um efeito mais animado quando mudarmos de slide. Para isso usaremos a propriedade transition.
    */

    animation-name: animacao;
    animation-duration: 10s;
    animation-iteration-count: infinite;
  }

  .lista_de_slides:hover {
    animation-play-state: paused;
  }

  .slide img{
    width: 100%;
    height: auto;
  }

/* Estilo do cubo */

.cubo {
  width: 300px;
  height: 300px;
  animation: rotate 10s infinite alternate;
  transform-style: preserve-3d;
  margin-top: 150px;
}

.face {
  background: linear-gradient(45deg, #4fd1c522, #4fd1c5cc);
  border: 2px solid #4fd1c5;
  display: flex;
  align-items: center;
  justify-content: center;

  font-size: 50px;
  font-weight: bold;
  color: #234e52;

  width: 300px;
  height: 300px;
  position: absolute;
}

.face img {
  width: 100%;
  height: auto;
} 

.face--front {
  transform: translateZ(150px);
}

.face--right {
  transform: rotateY(90deg) translateZ(150px);
}

.face--back {
  transform: rotateY(180deg) translateZ(150px);
}

.face--left {
  transform: rotateY(-90deg) translateZ(150px);
}

.face--top {
  transform: rotateX(90deg) translateZ(150px);
}

.face--bottom {
  transform: rotateX(-90deg) translateZ(150px);
}